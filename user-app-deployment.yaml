apiVersion: apps/v1 
kind: Deployment # Deployment is used to manage stateless applications
metadata:
  name: user-app-deployment
  namespace: my-namespace
  labels:
        app: user-api
spec:
  replicas: 2
  strategy:
    type: RollingUpdate # RollingUpdate is used to update Pods in a controlled manner
    rollingUpdate:
      maxUnavailable: 1 # maximum number of Pods that can be unavailable during the update process
      maxSurge: 1 # maximum number of Pods that can be created over the desired number of Pods
  selector:
    matchLabels:
      app: user-api
  template:
    metadata:
      labels:
        app: user-api
    spec:
      containers:
      - name: user-api
        image: udnboss/user-service:v1.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "1"
            memory: "512Mi"
        env:
        # Add environment variables from ConfigMap
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: user-app-config
              key: NODE_ENV
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: user-db-config
              key: DB_NAME
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: user-app-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: user-app-config
              key: DB_PORT
        
        # Add environment variables from Secret
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: user-db-secrets
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: user-db-secrets
              key: DB_PASSWORD   
        
        startupProbe: # Add a startup probe to check if the app is done initializing
          httpGet:
            path: /startup-check 
            port: http 

        livenessProbe: # Add a liveness probe to check if the app is running
          httpGet:
            path: /health
            port: http

        readinessProbe: # Add a readiness probe to check if the app is ready to serve traffic
          httpGet:
            path: /ready
            port: http
